def vrm(
    execution_context: str = "EXEC_DEFAULT",
    filepath: str = "",
    ignore_warning: bool = True,
    armature_object_name: str = "",
) -> set[str]: ...
def vrma(
    execution_context: str = "EXEC_DEFAULT",
    filepath: str = "",
    armature_object_name: str = "",
) -> set[str]: ...
def gltf(
    filepath: str = "",
    check_existing: bool = True,
    export_format: str = "GLB",
    ui_tab: str = "GENERAL",
    export_copyright: str = "",
    export_image_format: str = "AUTO",
    export_texture_dir: str = "",
    export_texcoords: bool = True,
    export_normals: bool = True,
    export_draco_mesh_compression_enable: bool = False,
    export_draco_mesh_compression_level: int = 6,
    export_draco_position_quantization: int = 14,
    export_draco_normal_quantization: int = 10,
    export_draco_texcoord_quantization: int = 12,
    export_draco_color_quantization: int = 10,
    export_draco_generic_quantization: int = 12,
    export_tangents: bool = False,
    export_materials: str = "EXPORT",
    export_colors: bool = True,
    use_mesh_edges: bool = False,
    use_mesh_vertices: bool = False,
    export_cameras: bool = False,
    export_selected: bool = False,
    use_selection: bool = False,
    use_visible: bool = False,
    use_renderable: bool = False,
    use_active_collection: bool = False,
    export_extras: bool = False,
    export_yup: bool = True,
    export_apply: bool = False,
    export_animations: bool = True,
    export_frame_range: bool = True,
    export_frame_step: int = 1,
    export_force_sampling: bool = True,
    export_nla_strips: bool = True,
    export_def_bones: bool = False,
    export_current_frame: bool = False,
    export_skins: bool = True,
    export_all_influences: bool = False,
    export_morph: bool = True,
    export_morph_normal: bool = True,
    export_morph_tangent: bool = False,
    export_lights: bool = False,
    export_displacement: bool = False,
    will_save_settings: bool = False,
    filter_glob: str = "*.glb;*.gltf",

    # bpy.app.version >= (3, 6)
    export_rest_position_armature: bool = True,
) -> set[str]: ...
