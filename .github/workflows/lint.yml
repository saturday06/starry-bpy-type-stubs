name: lint

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install deb packages
        run: |
          sudo apt-get update -qq || true
          sudo apt-get install -y nkf python3 shellcheck shfmt uchardet
        env:
          DEBIAN_FRONTEND: noninteractive
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          submodules: recursive
      - name: Disable git config core.quotepath
        run: git config core.quotepath off
      - name: Check file permissions
        run: |
          git ls-files ':!scripts/*.bat' ':!scripts/*.sh' | while read -r f; do
            echo "$f"
            if [ -x "$f" ]; then
              echo "$f has unnecessary executable permission."
              exit 1
            fi
          done
          git ls-files '*.sh' | while read -r f; do
            echo "$f"
            if [ ! -x "$f" ]; then
              echo "$f has no executable permission."
              exit 1
            fi
          done
      - name: Check file name characters
        run: |
          git ls-files | while read -r f; do
            encoding=$(echo "$f" | uchardet)
            if [ "$encoding" != "ASCII" ]; then
              echo "$f is not ascii file name but $encoding."
              exit 1
            fi
          done

          git ls-files "*.py" "*.pyi" | while read -r f; do
            if [ "$f" != "$(echo "$f" | LC_ALL=C tr "[:upper:]" "[:lower:]")" ]; then
              echo "$f contains uppercase character"
              exit 1
            fi
          done
      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
      - name: Install poetry dependencies
        run: poetry install
      - name: Check source code formatting
        run: |
          ./scripts/format.sh
          git diff --exit-code
      - name: Lint
        run: ./scripts/lint.sh
      - name: Super-Linter
        uses: github/super-linter@v5
        env:
          LOG_LEVEL: NOTICE
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
